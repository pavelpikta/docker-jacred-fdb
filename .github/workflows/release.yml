---
name: Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.set.outputs.released }}
      version: ${{ steps.set.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Git config setup
        shell: bash
        run: |
          git config --local user.name "${{ vars.GIT_AUTHOR_NAME }}"
          git config --local user.email "${{ vars.GIT_AUTHOR_EMAIL }}"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4.2.2
        with:
          semantic_version: 24.2.5
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release-export-data
            @semantic-release/git
            @semantic-release/github
            conventional-changelog-conventionalcommits

      - name: Set outputs
        id: set
        shell: bash
        run: |
          if [ ! -f semrel.json ]; then echo "released=false" >> $GITHUB_OUTPUT; exit 0; fi
          VER=$(jq -r '.nextRelease.version // empty' semrel.json)
          if [ -z "$VER" ] || [ "$VER" = "null" ]; then echo "released=false" >> $GITHUB_OUTPUT; exit 0; fi
          echo "released=true" >> $GITHUB_OUTPUT
          echo "version=$VER" >> $GITHUB_OUTPUT

  build:
    needs: release
    if: needs.release.outputs.released == 'true'
    uses: ./.github/workflows/reusable-docker-build.yml
    with:
      registry: ${{ env.REGISTRY }}
      image: ${{ env.IMAGE_NAME }}
      version: ${{ needs.release.outputs.version }}
      push: ${{ github.repository_owner == 'pavelpikta' }}
      attest_github: ${{ github.repository_owner == 'pavelpikta' }}
      sbom: true
      provenance: "mode=max"
      generate_syft_sbom: true
      sbom_artifact_retention_days: 30
